{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\file-loader\\\\dist\\\\cjs.js??ref--6-oneOf-7!C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\logo.svg\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\Posts\\\\Posts.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\actions\\\\postActions.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\actions\\\\types.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\Posts\\\\Postform.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\reducers\\\\postReducer.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\reducers\\\\index.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\store.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\App.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\registerServiceWorker.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Posts\",\"this\",\"props\",\"fetchPosts\",\"nextProps\",\"newPost\",\"posts\",\"unshift\",\"postItems\",\"map\",\"post\",\"react_default\",\"a\",\"createElement\",\"key\",\"id\",\"title\",\"body\",\"Component\",\"connect\",\"state\",\"items\",\"item\",\"dispatch\",\"fetch\",\"then\",\"res\",\"json\",\"type\",\"payload\",\"PostForm\",\"onChange\",\"e\",\"_this\",\"setState\",\"Object\",\"defineProperty\",\"target\",\"name\",\"value\",\"onSubmit\",\"preventDefault\",\"createPost\",\"postData\",\"method\",\"headers\",\"content-type\",\"JSON\",\"stringify\",\"initialState\",\"combineReducers\",\"arguments\",\"length\",\"undefined\",\"action\",\"objectSpread\",\"middleware\",\"thunk\",\"store\",\"createStore\",\"rootReducer\",\"compose\",\"applyMiddleware\",\"apply\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"App\",\"es\",\"className\",\"src\",\"logo\",\"alt\",\"Postform\",\"components_Posts_Posts\",\"isLocalhost\",\"Boolean\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"response\",\"status\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { connect } from 'react-redux';\\r\\nimport { fetchPosts } from '../../actions/postActions';\\r\\n\\r\\nclass Posts extends Component {\\r\\n  componentWillMount() {\\r\\n    this.props.fetchPosts();\\r\\n  }\\r\\n\\r\\n  componentWillReceiveProps(nextProps) {\\r\\n    if (nextProps.newPost) {\\r\\n      this.props.posts.unshift(nextProps.newPost);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    const postItems = this.props.posts.map(post => (\\r\\n      <div key={post.id}>\\r\\n        <h3>{post.title}</h3>\\r\\n        <p>{post.body}</p>\\r\\n      </div>\\r\\n    ));\\r\\n    return (\\r\\n      <div>\\r\\n        <h1>Posts</h1>\\r\\n        {postItems}\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nPosts.propTypes = {\\r\\n  fetchPosts: PropTypes.func.isRequired,\\r\\n  posts: PropTypes.array.isRequired,\\r\\n  newPost: PropTypes.object\\r\\n};\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n  posts: state.posts.items,\\r\\n  newPost: state.posts.item\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\",\"import { FETCH_POSTS, NEW_POST } from './types';\\r\\n\\r\\nexport const fetchPosts = () => dispatch => {\\r\\n  fetch('https://jsonplaceholder.typicode.com/posts')\\r\\n    .then(res => res.json())\\r\\n    .then(posts =>\\r\\n      dispatch({\\r\\n        type: FETCH_POSTS,\\r\\n        payload: posts\\r\\n      })\\r\\n    );\\r\\n};\\r\\n\\r\\nexport const createPost = postData => dispatch => {\\r\\n  fetch('https://jsonplaceholder.typicode.com/posts', {\\r\\n    method: 'POST',\\r\\n    headers: {\\r\\n      'content-type': 'application/json'\\r\\n    },\\r\\n    body: JSON.stringify(postData)\\r\\n  })\\r\\n    .then(res => res.json())\\r\\n    .then(post =>\\r\\n      dispatch({\\r\\n        type: NEW_POST,\\r\\n        payload: post\\r\\n      })\\r\\n    );\\r\\n};\",\"export const FETCH_POSTS = 'FETCH_POSTS';\\r\\nexport const NEW_POST = 'NEW_POST';\",\"import React, { Component } from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { connect } from 'react-redux';\\r\\nimport { createPost } from '../../actions/postActions';\\r\\n\\r\\nclass PostForm extends Component {\\r\\n  state = {\\r\\n    title:'',\\r\\n    body:'',\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  onChange = (e) => {\\r\\n    this.setState({ [e.target.name]: e.target.value });\\r\\n  }\\r\\n\\r\\n  onSubmit = (e) =>{\\r\\n    e.preventDefault();\\r\\n\\r\\n    const post = {\\r\\n      title: this.state.title,\\r\\n      body: this.state.body\\r\\n    };\\r\\n\\r\\n    this.props.createPost(post);\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <h1>Add Post</h1>\\r\\n        <form onSubmit={this.onSubmit}>\\r\\n          <div>\\r\\n            <label>Title: </label>\\r\\n            <br />\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"title\\\"\\r\\n              onChange={this.onChange}\\r\\n              value={this.state.title}\\r\\n            />\\r\\n          </div>\\r\\n          <br />\\r\\n          <div>\\r\\n            <label>Body: </label>\\r\\n            <br />\\r\\n            <textarea\\r\\n              name=\\\"body\\\"\\r\\n              onChange={this.onChange}\\r\\n              value={this.state.body}\\r\\n            />\\r\\n          </div>\\r\\n          <br />\\r\\n          <button type=\\\"submit\\\">Submit</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nPostForm.propTypes = {\\r\\n  createPost: PropTypes.func.isRequired\\r\\n};\\r\\n\\r\\nexport default connect(null, { createPost })(PostForm);\",\"import { FETCH_POSTS, NEW_POST } from '../actions/types';\\r\\n\\r\\nconst initialState = {\\r\\n  items: [],\\r\\n  item: {}\\r\\n};\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n  switch (action.type) {\\r\\n    case FETCH_POSTS:\\r\\n      return {\\r\\n        ...state,\\r\\n        items: action.payload\\r\\n      };\\r\\n    case NEW_POST:\\r\\n      return {\\r\\n        ...state,\\r\\n        item: action.payload\\r\\n      };\\r\\n    default:\\r\\n      return state;\\r\\n  }\\r\\n}\",\"import { combineReducers } from 'redux';\\r\\nimport postReducer from './postReducer';\\r\\n\\r\\nexport default combineReducers({\\r\\n  posts: postReducer\\r\\n});\",\"import { createStore, applyMiddleware, compose } from 'redux';\\r\\nimport thunk from 'redux-thunk';\\r\\nimport rootReducer from './reducers';\\r\\n\\r\\nconst initialState = {};\\r\\n\\r\\nconst middleware = [thunk];\\r\\n\\r\\nconst store = createStore(\\r\\n  rootReducer,\\r\\n  initialState,\\r\\n  compose(\\r\\n    applyMiddleware(...middleware),\\r\\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\\r\\n  )\\r\\n);\\r\\n\\r\\nexport default store;\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport { Provider } from 'react-redux';\\n\\nimport Posts from './components/Posts/Posts';\\nimport PostForm from './components/Posts/Postform';\\n\\nimport store from './store';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Provider store={store}>\\n        <div className=\\\"App\\\">\\n          <header className=\\\"App-header\\\">\\n            <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n            <h1 className=\\\"App-title\\\">Welcome to React</h1>\\n          </header>\\n          <PostForm />\\n          <hr />\\n          <Posts />\\n        </div>\\n      </Provider>\\n    );\\n  }\\n}\\n\\nexport default App;\",\"// In production, we register a service worker to serve assets from local cache.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\r\\n// cached resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\r\\n// This link also includes instructions on opting out of this behavior.\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n    window.location.hostname === 'localhost' ||\\r\\n      // [::1] is the IPv6 localhost address.\\r\\n      window.location.hostname === '[::1]' ||\\r\\n      // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n      window.location.hostname.match(\\r\\n        /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n      )\\r\\n  );\\r\\n  \\r\\n  export default function register() {\\r\\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n      // The URL constructor is available in all browsers that support SW.\\r\\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\r\\n      if (publicUrl.origin !== window.location.origin) {\\r\\n        // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n        // from what our page is served on. This might happen if a CDN is used to\\r\\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\r\\n        return;\\r\\n      }\\r\\n  \\r\\n      window.addEventListener('load', () => {\\r\\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n  \\r\\n        if (isLocalhost) {\\r\\n          // This is running on localhost. Lets check if a service worker still exists or not.\\r\\n          checkValidServiceWorker(swUrl);\\r\\n  \\r\\n          // Add some additional logging to localhost, pointing developers to the\\r\\n          // service worker/PWA documentation.\\r\\n          navigator.serviceWorker.ready.then(() => {\\r\\n            console.log(\\r\\n              'This web app is being served cache-first by a service ' +\\r\\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\\r\\n            );\\r\\n          });\\r\\n        } else {\\r\\n          // Is not local host. Just register service worker\\r\\n          registerValidSW(swUrl);\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  function registerValidSW(swUrl) {\\r\\n    navigator.serviceWorker\\r\\n      .register(swUrl)\\r\\n      .then(registration => {\\r\\n        registration.onupdatefound = () => {\\r\\n          const installingWorker = registration.installing;\\r\\n          installingWorker.onstatechange = () => {\\r\\n            if (installingWorker.state === 'installed') {\\r\\n              if (navigator.serviceWorker.controller) {\\r\\n                // At this point, the old content will have been purged and\\r\\n                // the fresh content will have been added to the cache.\\r\\n                // It's the perfect time to display a \\\"New content is\\r\\n                // available; please refresh.\\\" message in your web app.\\r\\n                console.log('New content is available; please refresh.');\\r\\n              } else {\\r\\n                // At this point, everything has been precached.\\r\\n                // It's the perfect time to display a\\r\\n                // \\\"Content is cached for offline use.\\\" message.\\r\\n                console.log('Content is cached for offline use.');\\r\\n              }\\r\\n            }\\r\\n          };\\r\\n        };\\r\\n      })\\r\\n      .catch(error => {\\r\\n        console.error('Error during service worker registration:', error);\\r\\n      });\\r\\n  }\\r\\n  \\r\\n  function checkValidServiceWorker(swUrl) {\\r\\n    // Check if the service worker can be found. If it can't reload the page.\\r\\n    fetch(swUrl)\\r\\n      .then(response => {\\r\\n        // Ensure service worker exists, and that we really are getting a JS file.\\r\\n        if (\\r\\n          response.status === 404 ||\\r\\n          response.headers.get('content-type').indexOf('javascript') === -1\\r\\n        ) {\\r\\n          // No service worker found. Probably a different app. Reload the page.\\r\\n          navigator.serviceWorker.ready.then(registration => {\\r\\n            registration.unregister().then(() => {\\r\\n              window.location.reload();\\r\\n            });\\r\\n          });\\r\\n        } else {\\r\\n          // Service worker found. Proceed as normal.\\r\\n          registerValidSW(swUrl);\\r\\n        }\\r\\n      })\\r\\n      .catch(() => {\\r\\n        console.log(\\r\\n          'No internet connection found. App is running in offline mode.'\\r\\n        );\\r\\n      });\\r\\n  }\\r\\n  \\r\\n  export function unregister() {\\r\\n    if ('serviceWorker' in navigator) {\\r\\n      navigator.serviceWorker.ready.then(registration => {\\r\\n        registration.unregister();\\r\\n      });\\r\\n    }\\r\\n  }\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n//registerServiceWorker();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},21:function(e,t,n){e.exports=n(34)},26:function(e,t,n){},28:function(e,t,n){},34:function(e,t,n){\"use strict\";n.r(t);var o=n(0),a=n.n(o),r=n(17),c=n.n(r),i=(n(26),n(3)),l=n(4),s=n(7),u=n(5),p=n(8),d=n(18),h=n.n(d),m=(n(28),n(6)),f=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"componentWillMount\",value:function(){this.props.fetchPosts()}},{key:\"componentWillReceiveProps\",value:function(e){e.newPost&&this.props.posts.unshift(e.newPost)}},{key:\"render\",value:function(){var e=this.props.posts.map(function(e){return a.a.createElement(\"div\",{key:e.id},a.a.createElement(\"h3\",null,e.title),a.a.createElement(\"p\",null,e.body))});return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,\"Posts\"),e)}}]),t}(o.Component),b=Object(m.b)(function(e){return{posts:e.posts.items,newPost:e.posts.item}},{fetchPosts:function(){return function(e){fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function(e){return e.json()}).then(function(t){return e({type:\"FETCH_POSTS\",payload:t})})}}})(f),v=n(10),E=function(e){function t(){var e,n;Object(i.a)(this,t);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(n=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(a)))).state={title:\"\",body:\"\"},n.onChange=function(e){n.setState(Object(v.a)({},e.target.name,e.target.value))},n.onSubmit=function(e){e.preventDefault();var t={title:n.state.title,body:n.state.body};n.props.createPost(t)},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"h1\",null,\"Add Post\"),a.a.createElement(\"form\",{onSubmit:this.onSubmit},a.a.createElement(\"div\",null,a.a.createElement(\"label\",null,\"Title: \"),a.a.createElement(\"br\",null),a.a.createElement(\"input\",{type:\"text\",name:\"title\",onChange:this.onChange,value:this.state.title})),a.a.createElement(\"br\",null),a.a.createElement(\"div\",null,a.a.createElement(\"label\",null,\"Body: \"),a.a.createElement(\"br\",null),a.a.createElement(\"textarea\",{name:\"body\",onChange:this.onChange,value:this.state.body})),a.a.createElement(\"br\",null),a.a.createElement(\"button\",{type:\"submit\"},\"Submit\")))}}]),t}(o.Component),g=Object(m.b)(null,{createPost:function(e){return function(t){fetch(\"https://jsonplaceholder.typicode.com/posts\",{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(e)}).then(function(e){return e.json()}).then(function(e){return t({type:\"NEW_POST\",payload:e})})}}})(E),y=n(1),O=n(20),w=n(13),j={items:[],item:{}},S=Object(y.c)({posts:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:j,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"FETCH_POSTS\":return Object(w.a)({},e,{items:t.payload});case\"NEW_POST\":return Object(w.a)({},e,{item:t.payload});default:return e}}}),k=[O.a],_=Object(y.e)(S,{},Object(y.d)(y.a.apply(void 0,k),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__())),P=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(m.a,{store:_},a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(\"header\",{className:\"App-header\"},a.a.createElement(\"img\",{src:h.a,className:\"App-logo\",alt:\"logo\"}),a.a.createElement(\"h1\",{className:\"App-title\"},\"Welcome to React\")),a.a.createElement(g,null),a.a.createElement(\"hr\",null),a.a.createElement(b,null)))}}]),t}(o.Component),T=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function N(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}c.a.render(a.a.createElement(P,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");T?(function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):N(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):N(e)})}}()}},[[21,2,1]]]);","extractedComments":[]}