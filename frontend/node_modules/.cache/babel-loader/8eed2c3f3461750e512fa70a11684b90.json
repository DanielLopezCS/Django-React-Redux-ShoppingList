{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\Posts\\\\Postform.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createPost, deletePost } from '../../actions/postActions';\nimport { Form, Segment, Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostForm, _Component);\n\n  function PostForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      description: '',\n      reciever: '',\n      price: '',\n      loading: false\n    };\n\n    _this.onDelete = function (e) {\n      e.preventDefault();\n      var post = {\n        name: _this.state.name,\n        description: _this.state.description,\n        reciever: _this.state.reciever,\n        price: _this.state.price\n      };\n\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.deletePost(post);\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var post = {\n        name: _this.state.name,\n        description: _this.state.description,\n        reciever: _this.state.reciever,\n        price: _this.state.price\n      };\n\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.createPost(post);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          reciever = _this$state.reciever,\n          price = _this$state.price,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Input Form\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"name\",\n        icon: \"gift\",\n        iconPosition: \"left\",\n        placeholder: \"Item Name\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"description\",\n        icon: \"sticky note\",\n        iconPosition: \"left\",\n        placeholder: \"Note\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"reciever\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Reciever Name\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: reciever,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"price\",\n        icon: \"dollar sign\",\n        iconPosition: \"left\",\n        placeholder: \"Item Price\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return PostForm;\n}(Component);\n\nPostForm.propTypes = {\n  createPost: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createPost: createPost,\n  deletePost: deletePost\n})(PostForm);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\ReactDjango\\ReactDjango\\frontend\\src\\components\\Posts\\Postform.js"],"names":["React","Component","PropTypes","connect","createPost","deletePost","Form","Segment","Button","PostForm","state","name","description","reciever","price","loading","onDelete","e","preventDefault","post","setState","props","onChange","target","value","onSubmit","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPost,deletePost } from '../../actions/postActions';\r\nimport {Form, Segment, Button} from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nclass PostForm extends Component {\r\n\r\n  state = {\r\n    name:'',\r\n    description:'',\r\n    reciever:'',\r\n    price:'',\r\n    loading:false,\r\n  }\r\n  onDelete = (e) =>\r\n  {\r\n    e.preventDefault();\r\n    \r\n    const post = {\r\n      name:this.state.name,\r\n      description:this.state.description,\r\n      reciever:this.state.reciever,\r\n      price:this.state.price,\r\n     \r\n    };\r\n    this.setState({loading:true});\r\n    this.props.deletePost(post);\r\n\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit = (e) =>{\r\n    e.preventDefault();\r\n    \r\n    const post = {\r\n      name:this.state.name,\r\n      description:this.state.description,\r\n      reciever:this.state.reciever,\r\n      price:this.state.price,\r\n     \r\n    };\r\n    this.setState({loading:true});\r\n    this.props.createPost(post);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {name,description,reciever,price, loading} = this.state; \r\n\r\n\r\n    return (\r\n      <div>\r\n  \r\n        <h2>Input Form</h2>\r\n       \r\n          <div>\r\n                  <Form onSubmit = {this.onSubmit}>\r\n                                <Segment stacked>\r\n                                    <Form.Input fluid name='name' icon='gift' iconPosition='left' \r\n                                    placeholder ='Item Name' onChange = {this.onChange} type = 'text'\r\n                                    value = {name} />\r\n\r\n                                    <Form.Input fluid name='description' icon='sticky note' iconPosition='left' \r\n                                    placeholder ='Note' onChange = {this.onChange} type = 'text'\r\n                                    value = {description}/>\r\n\r\n                                    <Form.Input fluid name='reciever' icon='user' iconPosition='left' \r\n                                    placeholder ='Reciever Name' onChange = {this.onChange} type = 'text'\r\n                                    value = {reciever}/>\r\n                                    \r\n                                    <Form.Input fluid name='price' icon='dollar sign' iconPosition='left' \r\n                                    placeholder ='Item Price' onChange = {this.onChange} type = 'text'\r\n                                    value = {price}/>\r\n                                    <Button color = 'blue' fluid size = 'large' type=\"submit\" >Submit</Button>\r\n                                </Segment>\r\n\r\n                            </Form>\r\n            \r\n          </div>\r\n     \r\n    \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  createPost: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { createPost,deletePost })(PostForm);"]},"metadata":{},"sourceType":"module"}