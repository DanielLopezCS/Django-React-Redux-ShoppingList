{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\TodoList\\\\ItemForm.js\";\nimport React, { Component } from 'react';\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\n\nvar ItemForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ItemForm, _Component);\n\n  function ItemForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItemForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: []\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.isFormValid = function () {\n      var errors = [];\n      var error;\n\n      if (_this.isFormEmpty(_this.state)) {\n        error = {\n          message: 'Fill in all fields'\n        };\n\n        _this.setState({\n          errors: errors\n        });\n      } else if (!_this.isPasswordValid()) {} else {\n        return true;\n      }\n    };\n\n    _this.isFormEmpty = function (_ref) {\n      var username = _ref.username,\n          email = _ref.email,\n          password = _ref.password,\n          passwordConfirmation = _ref.passwordConfirmation;\n      return !username.length || !email.length || !password.length || !passwordConfirmation.length;\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log(\"Pressed Submit\");\n      console.log(\"USERNAME: \" + _this.state.username);\n    };\n\n    return _this;\n  }\n\n  _createClass(ItemForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordConfirmation = _this$state.passwordConfirmation;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Input Form\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"username\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"email\",\n        icon: \"mail\",\n        iconPosition: \"left\",\n        placeholder: \"Email Address\",\n        onChange: this.handleChange,\n        type: \"email\",\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        type: \"password\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"passwordConfirmation\",\n        icon: \"repeat\",\n        iconPosition: \"left\",\n        placeholder: \"Password Confirmation\",\n        onChange: this.handleChange,\n        type: \"password\",\n        value: passwordConfirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"orange\",\n        fluid: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return ItemForm;\n}(Component);\n\nexport { ItemForm as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\ReactDjango\\ReactDjango\\frontend\\src\\components\\TodoList\\ItemForm.js"],"names":["React","Component","Grid","Form","Segment","Button","Header","Message","Icon","ItemForm","state","username","email","password","passwordConfirmation","errors","handleChange","event","setState","target","name","value","isFormValid","error","isFormEmpty","message","isPasswordValid","length","handleSubmit","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Grid, Form, Segment, Button, Header, Message, Icon} from 'semantic-ui-react';\r\n\r\nexport default class ItemForm extends Component {\r\n\r\n    state = {\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        passwordConfirmation:'',\r\n        errors:[]\r\n    }\r\n\r\n    handleChange = event =>{\r\n        this.setState({[event.target.name]:event.target.value});\r\n    }\r\n    isFormValid = () =>{\r\n        let errors = [];\r\n        let error;\r\n\r\n        if(this.isFormEmpty(this.state))\r\n        {\r\n            error = {message:'Fill in all fields'};\r\n            this.setState({errors})\r\n        } else if(!this.isPasswordValid())\r\n        {\r\n\r\n        } \r\n        else\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    isFormEmpty = ({ username,email,password,passwordConfirmation})=>{\r\n        return !username.length || !email.length || !password.length||!passwordConfirmation.length; \r\n    } \r\n    handleSubmit = event =>\r\n    {  \r\n        console.log(\"Pressed Submit\");\r\n        console.log(\"USERNAME: \" + this.state.username)\r\n    }\r\n  render() {\r\n    const {username,email,password,passwordConfirmation} = this.state; \r\n\r\n    return (\r\n        \r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <h1>Input Form</h1>\r\n          <div>\r\n          <Form onSubmit = {this.handleSubmit}>\r\n                        <Segment stacked>\r\n                            <Form.Input fluid name='username' icon='user' iconPosition='left' \r\n                            placeholder ='Username' onChange = {this.handleChange} type = 'text'\r\n                            value = {username} />\r\n\r\n                             <Form.Input fluid name='email' icon='mail' iconPosition='left' \r\n                            placeholder ='Email Address' onChange = {this.handleChange} type = 'email'\r\n                            value = {email}/>\r\n\r\n                             <Form.Input fluid name='password' icon='lock' iconPosition='left' \r\n                            placeholder ='Password' onChange = {this.handleChange} type = 'password'\r\n                            value = {password}/>\r\n                            \r\n                            <Form.Input fluid name='passwordConfirmation' icon='repeat' iconPosition='left' \r\n                            placeholder ='Password Confirmation' onChange = {this.handleChange} type = 'password'\r\n                            value = {passwordConfirmation}/>\r\n                            <Button color = 'orange' fluid size = 'large'>Submit</Button>\r\n                        </Segment>\r\n\r\n                    </Form>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}