{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\Posts\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../actions/postActions';\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newPost) {\n        this.props.posts.unshift(nextProps.newPost);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var postItems = this.props.posts.map(function (post) {\n        return React.createElement(\"div\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Segment.Group, {\n          stacked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          inverted: true,\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Item:  \", post.name), \" \"), React.createElement(Segment, {\n          inverted: true,\n          color: \"gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \" Note: \", post.description), React.createElement(Segment, {\n          inverted: true,\n          color: \"gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \" To: \", post.reciever), React.createElement(Segment, {\n          inverted: true,\n          color: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" Price: \", post.price)));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Shopping List\"), postItems.length === 0 && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Your Shopping List Is Empty ... \")), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"You Have \", postItems.length, \" Itmes In Your Shopping Cart.\"), postItems);\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts.items,\n    newPost: state.posts.item\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Posts);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\ReactDjango\\ReactDjango\\frontend\\src\\components\\Posts\\Posts.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Grid","Form","Segment","Button","Header","Message","Icon","Posts","props","nextProps","newPost","posts","unshift","postItems","map","post","id","name","description","reciever","price","length","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsDC,IAAtD,QAAiE,mBAAjE;;IAEMC,K;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWT,UAAX;AACD;;;8CAEyBU,S,EAAW;AACnC,UAAIA,SAAS,CAACC,OAAd,EAAuB;AACrB,aAAKF,KAAL,CAAWG,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACD;AACF;;;6BAEQ;AAEP,UAAMG,SAAS,GAAG,KAAKL,KAAL,CAAWG,KAAX,CAAiBG,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACzC;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,oBAAC,OAAD,CAAS,KAAT;AAAe,UAAA,OAAO,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,KAAK,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWD,IAAI,CAACE,IAAhB,CAAhC,MAFJ,EAGI,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,KAAK,EAAG,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyCF,IAAI,CAACG,WAA9C,CAHJ,EAII,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,KAAK,EAAG,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuCH,IAAI,CAACI,QAA5C,CAJJ,EAKI,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,KAAK,EAAG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2CJ,IAAI,CAACK,KAAhD,CALJ,CADE,CADyC;AAAA,OAAzB,CAAlB;AAYA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGIP,SAAS,CAACQ,MAAV,KAAqB,CAArB,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CAJF,EASU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaR,SAAS,CAACQ,MAAvB,kCATV,EAWER,SAXF,CADF;AAgBD;;;;EAzCiBjB,S;;AA4CpBW,KAAK,CAACe,SAAN,GAAkB;AAChBvB,EAAAA,UAAU,EAAEF,SAAS,CAAC0B,IAAV,CAAeC,UADX;AAEhBb,EAAAA,KAAK,EAAEd,SAAS,CAAC4B,KAAV,CAAgBD,UAFP;AAGhBd,EAAAA,OAAO,EAAEb,SAAS,CAAC6B;AAHH,CAAlB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,CAAYkB,KADa;AAEhCnB,IAAAA,OAAO,EAAEkB,KAAK,CAACjB,KAAN,CAAYmB;AAFW,GAAL;AAAA,CAA7B;;AAKA,eAAehC,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCQ,KAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../../actions/postActions';\r\nimport {Grid, Form, Segment, Button, Header, Message, Icon} from 'semantic-ui-react';\r\n\r\nclass Posts extends Component {\r\n  componentWillMount() {\r\n    this.props.fetchPosts();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newPost) {\r\n      this.props.posts.unshift(nextProps.newPost);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    const postItems = this.props.posts.map(post => (\r\n      <div key={post.id}>\r\n    <Segment.Group stacked>\r\n      \r\n        <Segment inverted color='blue'> <b>Item:  {post.name}</b> </Segment>\r\n        <Segment inverted color = 'gray'> Note: {post.description}</Segment>\r\n        <Segment inverted color = 'gray'> To: {post.reciever}</Segment>\r\n        <Segment inverted color = 'green'> Price: {post.price}</Segment>\r\n        \r\n    </Segment.Group>\r\n    </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2>Shopping List</h2>\r\n        {\r\n          postItems.length === 0 &&\r\n        <h2>\r\n          <i>Your Shopping List Is Empty ... </i>\r\n        </h2>\r\n      }\r\n              \r\n                <i>You Have {postItems.length} Itmes In Your Shopping Cart.</i>\r\n\r\n       {postItems}\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  fetchPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  newPost: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.items,\r\n  newPost: state.posts.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Posts);"]},"metadata":{},"sourceType":"module"}