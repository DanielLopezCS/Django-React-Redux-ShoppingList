{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\ReactDjango\\\\ReactDjango\\\\frontend\\\\src\\\\components\\\\Posts\\\\Postform.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../actions/postActions';\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostForm, _Component);\n\n  function PostForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      description: '',\n      reciever: '',\n      price: ''\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var post = {\n        name: _this.state.name,\n        description: _this.state.description,\n        reciever: _this.state.reciever,\n        price: _this.state.price,\n        title: _this.state.title,\n        body: _this.state.body\n      };\n\n      _this.props.createPost(post);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          reciever = _this$state.reciever,\n          price = _this$state.price;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Input Form\"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 550\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"name\",\n        icon: \"gift\",\n        iconPosition: \"left\",\n        placeholder: \"Item Name\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"description\",\n        icon: \"sticky note\",\n        iconPosition: \"left\",\n        placeholder: \"Note\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"reciever\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Reciever Name\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: reciever,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"price\",\n        icon: \"dollar sign\",\n        iconPosition: \"left\",\n        placeholder: \"Item Price\",\n        onChange: this.onChange,\n        type: \"text\",\n        value: price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Submit\"))))))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostForm;\n}(Component);\n\nPostForm.propTypes = {\n  createPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createPost: createPost\n})(PostForm);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\ReactDjango\\ReactDjango\\frontend\\src\\components\\Posts\\Postform.js"],"names":["React","Component","PropTypes","connect","createPost","Grid","Form","Segment","Button","Header","Message","Icon","PostForm","state","name","description","reciever","price","onChange","e","setState","target","value","onSubmit","preventDefault","post","title","body","props","maxWidth","handleSubmit","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../../actions/postActions';\r\nimport {Grid, Form, Segment, Button, Header, Message, Icon} from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nclass PostForm extends Component {\r\n  state = {\r\n    name:'',\r\n    description:'',\r\n    reciever:'',\r\n    price:'',\r\n  }\r\n\r\n\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      name:this.state.name,\r\n      description:this.state.description,\r\n      reciever:this.state.reciever,\r\n      price:this.state.price,\r\n\r\n      title: this.state.title,\r\n      body: this.state.body\r\n    };\r\n\r\n    this.props.createPost(post);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {name,description,reciever,price} = this.state; \r\n\r\n\r\n    return (\r\n      <div>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <h1>Input Form</h1>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <div>\r\n              <Grid textAlign = 'center' verticalAlign ='middle' className='app'>\r\n                <Grid.Column style = {{maxWidth:550}}>\r\n              \r\n                  <Form onSubmit = {this.handleSubmit}>\r\n                                <Segment stacked>\r\n                                    <Form.Input fluid name='name' icon='gift' iconPosition='left' \r\n                                    placeholder ='Item Name' onChange = {this.onChange} type = 'text'\r\n                                    value = {name} />\r\n\r\n                                    <Form.Input fluid name='description' icon='sticky note' iconPosition='left' \r\n                                    placeholder ='Note' onChange = {this.onChange} type = 'text'\r\n                                    value = {description}/>\r\n\r\n                                    <Form.Input fluid name='reciever' icon='user' iconPosition='left' \r\n                                    placeholder ='Reciever Name' onChange = {this.onChange} type = 'text'\r\n                                    value = {reciever}/>\r\n                                    \r\n                                    <Form.Input fluid name='price' icon='dollar sign' iconPosition='left' \r\n                                    placeholder ='Item Price' onChange = {this.onChange} type = 'text'\r\n                                    value = {price}/>\r\n                                    <Button color = 'blue' fluid size = 'large' type=\"submit\" >Submit</Button>\r\n                                </Segment>\r\n\r\n                            </Form>\r\n                </Grid.Column>\r\n              </Grid>\r\n          </div>\r\n        </Form>\r\n        </header>\r\n      </div>\r\n      <div>\r\n      {/*\r\n        <h1>Add Post</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div>\r\n            <label>Title: </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.onChange}\r\n              value={this.state.title}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <label>Body: </label>\r\n            <br />\r\n            <textarea\r\n              name=\"body\"\r\n              onChange={this.onChange}\r\n              value={this.state.body}\r\n            />\r\n          </div>\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>*/}\r\n      </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  createPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { createPost })(PostForm);"]},"metadata":{},"sourceType":"module"}